trigger:
  - main

# Allow running tests against either the production site or localhost via Sauce Connect
parameters:
  - name: environment
    displayName: Environment to test against
    type: string
    default: 'prod'
    values:
      - prod   # tests hit https://cjv-budgetapp.web.app/
      - dev    # tests hit http://localhost:3000 via Sauce Connect tunnel

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: 'SL creds'
  - name: SAUCE_TUNNEL_NAME
    value: 'budget-app-tunnel'
  - name: BASE_URL_DEV
    value: 'http://localhost:3000'
  - name: BASE_URL_PROD
    value: 'https://cjv-budgetapp.web.app/'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
    displayName: 'Install dependencies'

  # Start Sauce Connect and expose the tunnel only for the `dev` environment
  - script: |
      npm install -g sauce-connect-launcher
      sc -u $(SAUCE_USERNAME) -k $(SAUCE_ACCESS_KEY) --tunnel-name $(SAUCE_TUNNEL_NAME) &
      sleep 15
    displayName: 'Start Sauce Connect Tunnel'
    condition: eq('${{ parameters.environment }}', 'dev')

  # Launch the local dev server only when testing against localhost
  - script: |
      npm start &
      sleep 10
    displayName: 'Start application'
    condition: eq('${{ parameters.environment }}', 'dev')

  # Run the WDIO tests. BASE_URL and tunnel env vars change per environment.
  - script: |
      npx wdio run wdio.conf.js
    displayName: 'Run WDIO tests on Sauce Labs'
    env:
      SAUCE_USERNAME: $(SAUCE_USERNAME)
      SAUCE_ACCESS_KEY: $(SAUCE_ACCESS_KEY)
      SAUCE_TUNNEL_NAME: $(SAUCE_TUNNEL_NAME)
      # Set BASE_URL depending on environment parameter
      ${{ if eq(parameters.environment, 'dev') }}:
        BASE_URL: $(BASE_URL_DEV)
      ${{ if ne(parameters.environment, 'dev') }}:
        BASE_URL: $(BASE_URL_PROD)
      BUILD_ID: $(Build.BuildId)